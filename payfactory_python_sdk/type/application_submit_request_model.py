# coding: utf-8

"""
    Payfactory Api

    Payfactory specializes in embedded payment facilitation (payfac) services for ISVs and SaaS companies. Our gateway-friendly platform integrates with software systems to provide seamless payment facilitation with little to no development required, allowing our partners to minimize integration costs and quickly gain a new revenue stream. Founded by payment industry veterans, we believe that integrated processing should be simple, frictionless and fast â€“ while also maintaining the highest level of security, customer service and human support.

    The version of the OpenAPI document: v1
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING

from payfactory_python_sdk.type.bank_details_model import BankDetailsModel
from payfactory_python_sdk.type.business_details_model import BusinessDetailsModel
from payfactory_python_sdk.type.customer_service_contact_model import CustomerServiceContactModel
from payfactory_python_sdk.type.owner_model import OwnerModel
from payfactory_python_sdk.type.person_model import PersonModel
from payfactory_python_sdk.type.pricing_model import PricingModel
from payfactory_python_sdk.type.processing_details_model import ProcessingDetailsModel
from payfactory_python_sdk.type.risk_contact_model import RiskContactModel

class RequiredApplicationSubmitRequestModel(TypedDict):
    isvName: str

    businessDetails: BusinessDetailsModel

    customerServiceContact: CustomerServiceContactModel

    riskContact: RiskContactModel

    businessContact: PersonModel

    processingDetails: ProcessingDetailsModel

    bankDetails: BankDetailsModel

    pricingStructure: PricingModel

class OptionalApplicationSubmitRequestModel(TypedDict, total=False):
    externalId: typing.Optional[str]

    owners: typing.Optional[typing.List[OwnerModel]]

class ApplicationSubmitRequestModel(RequiredApplicationSubmitRequestModel, OptionalApplicationSubmitRequestModel):
    pass

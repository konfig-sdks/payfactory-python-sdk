# coding: utf-8

"""
    Payfactory Api

    Payfactory specializes in embedded payment facilitation (payfac) services for ISVs and SaaS companies. Our gateway-friendly platform integrates with software systems to provide seamless payment facilitation with little to no development required, allowing our partners to minimize integration costs and quickly gain a new revenue stream. Founded by payment industry veterans, we believe that integrated processing should be simple, frictionless and fast â€“ while also maintaining the highest level of security, customer service and human support.

    The version of the OpenAPI document: v1
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel

from payfactory_python_sdk.pydantic.bank_details_model import BankDetailsModel
from payfactory_python_sdk.pydantic.business_details_model import BusinessDetailsModel
from payfactory_python_sdk.pydantic.customer_service_contact_model import CustomerServiceContactModel
from payfactory_python_sdk.pydantic.owner_model import OwnerModel
from payfactory_python_sdk.pydantic.person_model import PersonModel
from payfactory_python_sdk.pydantic.pricing_model import PricingModel
from payfactory_python_sdk.pydantic.processing_details_model import ProcessingDetailsModel
from payfactory_python_sdk.pydantic.risk_contact_model import RiskContactModel

class ApplicationSubmitRequestModel(BaseModel):
    isv_name: str = Field(alias='isvName')

    business_details: BusinessDetailsModel = Field(alias='businessDetails')

    customer_service_contact: CustomerServiceContactModel = Field(alias='customerServiceContact')

    risk_contact: RiskContactModel = Field(alias='riskContact')

    business_contact: PersonModel = Field(alias='businessContact')

    processing_details: ProcessingDetailsModel = Field(alias='processingDetails')

    bank_details: BankDetailsModel = Field(alias='bankDetails')

    pricing_structure: PricingModel = Field(alias='pricingStructure')

    external_id: typing.Optional[typing.Optional[str]] = Field(None, alias='externalId')

    owners: typing.Optional[typing.Optional[typing.List[OwnerModel]]] = Field(None, alias='owners')
    class Config:
        arbitrary_types_allowed = True

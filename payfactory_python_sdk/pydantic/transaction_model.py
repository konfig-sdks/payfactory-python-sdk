# coding: utf-8

"""
    Payfactory Api

    Payfactory specializes in embedded payment facilitation (payfac) services for ISVs and SaaS companies. Our gateway-friendly platform integrates with software systems to provide seamless payment facilitation with little to no development required, allowing our partners to minimize integration costs and quickly gain a new revenue stream. Founded by payment industry veterans, we believe that integrated processing should be simple, frictionless and fast â€“ while also maintaining the highest level of security, customer service and human support.

    The version of the OpenAPI document: v1
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel

from payfactory_python_sdk.pydantic.card_type_enum import CardTypeEnum

class TransactionModel(BaseModel):
    date: typing.Optional[datetime] = Field(None, alias='date')

    amount: typing.Optional[typing.Union[int, float]] = Field(None, alias='amount')

    fee: typing.Optional[typing.Union[int, float]] = Field(None, alias='fee')

    masked_pan: typing.Optional[typing.Optional[str]] = Field(None, alias='maskedPan')

    card_type: typing.Optional[CardTypeEnum] = Field(None, alias='cardType')

    cardholder_name: typing.Optional[typing.Optional[str]] = Field(None, alias='cardholderName')

    exp_date: typing.Optional[typing.Optional[str]] = Field(None, alias='expDate')

    type: typing.Optional[typing.Optional[str]] = Field(None, alias='type')

    ref_number: typing.Optional[typing.Optional[str]] = Field(None, alias='refNumber')

    batch_id: typing.Optional[typing.Optional[str]] = Field(None, alias='batchId')

    auth_code: typing.Optional[typing.Optional[str]] = Field(None, alias='authCode')

    user_data: typing.Optional[typing.Optional[str]] = Field(None, alias='userData')
    class Config:
        arbitrary_types_allowed = True
